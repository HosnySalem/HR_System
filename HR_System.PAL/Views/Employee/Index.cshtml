@using Microsoft.AspNetCore.Authorization;
@inject IAuthorizationService AuthorizationService

@model IEnumerable<Employee>

@{
    ViewData["Title"] = "Employees";
}

<style>
    .no-data {
        max-width: 400px
    }
</style>

@if (User.Identity.IsAuthenticated)
        {
            var canAccess = await AuthorizationService.AuthorizeAsync(User, "Permissions.Employee.Create");
            if (canAccess.Succeeded)
            {
<div class="d-flex justify-content-start m-3 mb-4">
            <a asp-action="Add" style="background-color: var(--main-color)" class="btn"> <i class="fa-solid fa-plus"></i> Add New Employee</a>
</div>
            }
        }


<div id="holidays-table" class="panel panel-default templatemo-content-widget white-bg no-padding templatemo-overflow-hidden">

    <div class="panel-heading templatemo-position-relative" style="background-color: var(--main-color)">
        <h2 class="text-uppercase text-center">Employees Details</h2>
    </div>
    @if (Model.Count() != 0)
    {
        <div class="table-responsive">
            <table class="table table-striped table-bordered table-hover">
                <thead>
                    <tr>
                        <th class="text-center">National ID</th>
                        <th class="text-center">Name</th>
                        <th class="text-center">Phone Number</th>
                        <th class="text-center">Hiring date</th>
                        <th class="text-center">Department</th>
                        <th class="text-center">Salary</th>
                        <th class="text-center">Attendance Time</th>
                        <th class="text-center">DepartureTime</th>
                        <th class="text-center">Permissions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var emp in Model)
                    {
                        <tr id="id-@emp.Id">
                            <td class="text-center">@emp.NationalID</td>
                            <td class="text-center">@emp.Name</td>
                            <td class="text-center">@emp.PhoneNumber</td>
                            <td class="text-center">@emp.DateOfContract.ToString("dd/MM/yyyy")</td>
                            <td class="text-center">@emp.Department.Name</td>
                            <td class="text-center">@Convert.ToInt32(emp.Salary)</td>
                            <td class="text-center">@emp.AttendanceTime.ToString("HH:mm")</td>
                            <td class="text-center">@emp.DepartureTime.ToString("HH:mm")</td>
                            <td class="text-center">
                                @if (User.Identity.IsAuthenticated)
        {
            var canAccess = await AuthorizationService.AuthorizeAsync(User, "Permissions.Employee.Edit");
            if (canAccess.Succeeded)
            {
                                <a asp-action="Edit" asp-route-id="@emp.Id" class="bi bi-pencil-square text-warning fs-5"></a>
            }
        }

                                                    @if (User.Identity.IsAuthenticated)
        {
            var canAccess = await AuthorizationService.AuthorizeAsync(User, "Permissions.Employee.Delete");
            if (canAccess.Succeeded)
            {
<i style="cursor:pointer" onclick="DeleteEmployee('@emp.Id')" class="bi bi-trash3-fill text-danger fs-5"></i>
            }
        }
                          </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <div class="d-flex justify-content-center">
            <img class="no-data" src="~/images/No data.gif" alt="No data" title="No data">
        </div>
    }
</div>


@section Scripts{
    <partial name="_ValidationScriptsPartial" />

    <script>
        function DeleteEmployee(id) {
            Swal.fire({
                title: 'Are you sure to delete?',
                text: "You won't be able to get it back!!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes',
                cancelButtonText: 'No'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '/Employee/Delete/',
                        method: 'GET',
                        data: {
                            Id: id
                        },
                        success: function (response) {
                            let row = document.querySelector('#id-' + id)
                            let body = document.querySelector('tbody')
                            body.removeChild(row);
                            Swal.fire({
                                title:'Deleted',
                                text: `The employee has been deleted`,
                                icon:'success',
                                confirmButtonText: 'Ok'
                            })
                            console.log('Request succeeded:', response);
                        },
                        error: function (xhr, status, error) {
                            console.log('Request failed:', xhr.responseText);
                        }
                    });
                }
            })
            
        }
    </script>

}