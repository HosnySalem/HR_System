@using Microsoft.AspNetCore.Authorization;
@inject IAuthorizationService AuthorizationService

@model IEnumerable<OfficialHoliday>
@using System.Globalization

@{
    ViewData["Title"] = "Official Holiday";
}

<style>
    .no-data {
        max-width: 400px
    }
</style>

@if (User.Identity.IsAuthenticated)
        {
            var canAccess = await AuthorizationService.AuthorizeAsync(User, "Permissions.Holidays.Create");
            if (canAccess.Succeeded)
            {
                <div class="d-flex justify-content-start m-3 mb-4">
            <a asp-action="Add" style="background-color: var(--main-color)" class="btn"> <i class="fa-solid fa-plus"></i> Add Holiday</a>
                </div>
            }
        }

<div id="holidays-table" class="panel panel-default templatemo-content-widget white-bg no-padding templatemo-overflow-hidden">

    <div class="panel-heading templatemo-position-relative" style="background-color:#0d6efd">
        <h2 class="text-uppercase text-center">Official Holiday</h2>
    </div>
    @if (Model.Count() != 0)
    {
        <div class="table-responsive">
            <table class="table table-striped table-bordered ">
                <thead>
                    <tr class="text-center fs-6">
                        <th>Name</th>
                        <th>Date</th>
                        <th>Permissions</th>
                    </tr>
                </thead>
                <tbody >
                    @foreach (var holiday in Model)
                    {
                        <tr id="id-@holiday.Id" class="text-center"> 
                            <td>@holiday.Name</td>
                            <td>@holiday.Date.ToString("dd/MM/yyyy")</td>
                            <td>
                                @if (User.Identity.IsAuthenticated)
                                   {
                                    var canAccess = await AuthorizationService.AuthorizeAsync(User, "Permissions.Holidays.Edit");
                                    if (canAccess.Succeeded)
                                    {
                                                <a asp-action="Edit" asp-route-id="@holiday.Id" class="bi bi-pencil-square text-warning fs-5"></a>

                                    }
                                    }

 
                                @if (User.Identity.IsAuthenticated)
                                   {
                                    var canAccess = await AuthorizationService.AuthorizeAsync(User, "Permissions.Holidays.Delete");
                                    if (canAccess.Succeeded)
                                    {
                                        <i style="cursor:pointer" onclick="Deleteholiday(@holiday.Id)" class="bi bi-trash3-fill text-danger fs-5"></i>

                                    }
                                    }
                          </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <div class="d-flex justify-content-center">
            <img class="no-data" src="~/images/No data.gif" alt="No data" title="No data">
        </div>
    }
</div>

@section Scripts{
    <script>
        function showAddForm() {
            var addForm = document.getElementById("addForm");
            addForm.style.display = "block";
        }

        function Deleteholiday(id) {
            Swal.fire({
                title: 'Are you sure to delete?',
                text: "You won't be able to get it back!!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes',
                cancelButtonText: 'No'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '/OfficialHoliday/delete/',
                        method: 'GET',
                        data: {
                            Id: id
                        },
                        success: function (response) {
                            let row = document.querySelector('#id-' + id);
                            let body = document.querySelector('tbody');
                            body.removeChild(row);
                            console.log('Request succeeded:', response);
                            Swal.fire({
                                title: 'Deleted',
                                text: `${response.name} Holiday has been deleted `,
                                icon: 'success',
                                confirmButtonText: 'Ok'
                            }).then((result) => {
                                if (result.isConfirmed) {
                                    if (body.innerText == "") {
                                        location.reload();
                                    }
                                }
                            })
                        },
                        error: function (xhr, status, error) {
                            console.log('Request failed:', xhr.responseText);
                        }
                    });
                }
            })


        }
    </script>
}
