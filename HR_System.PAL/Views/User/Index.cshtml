@using Microsoft.AspNetCore.Authorization;
@inject IAuthorizationService AuthorizationService

@model IEnumerable<UserVM>

@{
    ViewData["Title"] = "Users";
}

<style>
    .no-data {
        max-width: 400px
    }
</style>


@if (User.Identity.IsAuthenticated)
        {
            var canAccess = await AuthorizationService.AuthorizeAsync(User, "Permissions.Users.Create");
            if (canAccess.Succeeded)
            {
                <div class="d-flex justify-content-start m-3 mb-4">
            <a asp-action="Add" style="background-color: var(--main-color)" class="btn "> <i class="fa-solid fa-plus"></i>Add New User</a>
</div>

            }
        }
<div id="holidays-table" class="panel panel-default templatemo-content-widget white-bg no-padding templatemo-overflow-hidden">

    <div class="panel-heading templatemo-position-relative" style="background-color: var(--main-color)">
        <h2 class="text-uppercase text-center">Users</h2>
    </div>
    @if (Model.Count() != 0)
    {
        <div class="table-responsive">
            <table class="table table-striped table-bordered ">
                <thead>
                    <tr>
                        <th class="text-center">Name</th>
                        <th class="text-center">UserName</th>
                        <th class="text-center">Email</th>
                        <th class="text-center">Group</th>
                        <th class="text-center">Permissions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td class="text-center">@item.fullName</td>
                            <td class="text-center">@item.userName</td>
                            <td class="text-center">@item.email</td>
                            <td class="text-center">@string.Join(" , " ,item.Role.ToList())</td>
                            <td class="text-center">
                                @if (User.Identity.IsAuthenticated)
        {
            var canAccess = await AuthorizationService.AuthorizeAsync(User, "Permissions.Users.Delete");
            if (canAccess.Succeeded)
            {
                                <a class="bi bi-trash3-fill text-danger fs-5" href="/User/Delete/@item.Id"></a>

            }
        }                   </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <div class="d-flex justify-content-center">
            <img class="no-data" src="~/images/No data.gif" alt="There are no Holidays" title="There are no Holidays">
        </div>
    }
</div>
